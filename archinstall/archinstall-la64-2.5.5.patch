diff --git a/archinstall/lib/disk/partition.py b/archinstall/lib/disk/partition.py
index 87eaa6a7..b5fe0f75 100644
--- a/archinstall/lib/disk/partition.py
+++ b/archinstall/lib/disk/partition.py
@@ -204,7 +204,14 @@ class Partition:
 		output = SysCommand(f"sfdisk --json {self.block_device.path}").decode('UTF-8')
 
 		if output:
-			sfdisk_info = json.loads(output)
+			try:
+				sfdisk_info = json.loads(output)
+			except:
+				lines = output.splitlines()
+				for i in range(len(lines)):
+					if lines[i] == '{':
+						break
+				sfdisk_info = json.loads("\n".join(output.splitlines()[i:]))
 			partitions = sfdisk_info.get('partitiontable', {}).get('partitions', [])
 			node = list(filter(lambda x: x['node'] == self._path, partitions))
 
diff --git a/archinstall/lib/hardware.py b/archinstall/lib/hardware.py
index 9660ea95..7d60b780 100644
--- a/archinstall/lib/hardware.py
+++ b/archinstall/lib/hardware.py
@@ -13,6 +13,7 @@ __packages__ = [
 	"mesa",
 	"xf86-video-amdgpu",
 	"xf86-video-ati",
+	"xf86-video-loongson",
 	"xf86-video-nouveau",
 	"xf86-video-vmware",
 	"libva-mesa-driver",
@@ -30,6 +31,7 @@ AVAILABLE_GFX_DRIVERS = {
 		"mesa",
 		"xf86-video-amdgpu",
 		"xf86-video-ati",
+		"xf86-video-loongson",
 		"xf86-video-nouveau",
 		"xf86-video-vmware",
 		"libva-mesa-driver",
@@ -42,6 +44,7 @@ AVAILABLE_GFX_DRIVERS = {
 		"mesa",
 		"xf86-video-amdgpu",
 		"xf86-video-ati",
+		"xf86-video-loongson",
 		"libva-mesa-driver",
 		"vulkan-radeon",
 	],
diff --git a/archinstall/lib/installer.py b/archinstall/lib/installer.py
index 15cb5ff0..b6d61ee3 100644
--- a/archinstall/lib/installer.py
+++ b/archinstall/lib/installer.py
@@ -954,10 +954,10 @@ class Installer:
 		if has_uefi():
 			self.pacstrap('efibootmgr') # TODO: Do we need? Yes, but remove from minimal_installation() instead?
 			try:
-				SysCommand(f'/usr/bin/arch-chroot {self.target} grub-install --debug --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB --removable', peek_output=True)
+				SysCommand(f'/usr/bin/arch-chroot {self.target} grub-install --debug --target=loongarch64-efi --efi-directory=/boot --bootloader-id=GRUB --removable', peek_output=True)
 			except SysCallError:
 				try:
-					SysCommand(f'/usr/bin/arch-chroot {self.target} grub-install --debug --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB --removable', peek_output=True)
+					SysCommand(f'/usr/bin/arch-chroot {self.target} grub-install --debug --target=loongarch64-efi --efi-directory=/boot --bootloader-id=GRUB --removable', peek_output=True)
 				except SysCallError as error:
 					raise DiskError(f"Could not install GRUB to {self.target}/boot: {error}")
 		else:
diff --git a/archinstall/lib/menu/abstract_menu.py b/archinstall/lib/menu/abstract_menu.py
index d659d709..ec52b4bb 100644
--- a/archinstall/lib/menu/abstract_menu.py
+++ b/archinstall/lib/menu/abstract_menu.py
@@ -1,6 +1,9 @@
 from __future__ import annotations
 
 import logging
+import sys
+import pathlib
+import unicodedata
 from typing import Callable, Any, List, Iterator, Tuple, Optional, Dict, TYPE_CHECKING
 
 from .menu import Menu, MenuSelectionType
@@ -12,6 +15,13 @@ from ..user_interaction.general_conf import select_archinstall_language
 if TYPE_CHECKING:
 	_: Any
 
+def count_cjk_chars(string):
+	return sum(unicodedata.east_asian_width(c) in 'FW' for c in string)
+
+def cjkljust(string, width, fillbyte=' '):
+	"""  Align left  >>> cjkljust('hello', 10, '*') 'hello*****' >>> cjkljust(' Hello world', 10, '*') ' Hello world*' >>> cjkljust(' Hello world', 1, '*') ' Hello world' """
+	return string.ljust(width - count_cjk_chars(string), fillbyte)
+
 
 class Selector:
 	def __init__(
@@ -126,7 +136,7 @@ class Selector:
 
 		if current:
 			padding += 5
-			description = str(self._description).ljust(padding, ' ')
+			description = cjkljust(str(self._description), padding, ' ')
 			current = str(_('set: {}').format(current))
 		else:
 			description = self._description
diff --git a/archinstall/lib/mirrors.py b/archinstall/lib/mirrors.py
index d76e0473..2c5d24d9 100644
--- a/archinstall/lib/mirrors.py
+++ b/archinstall/lib/mirrors.py
@@ -66,9 +66,10 @@ def filter_mirrors_by_region(regions :str,
 	:param regions: A series of country codes separated by `,`. For instance `SE,US` for sweden and United States.
 	:type regions: str
 	"""
-	region_list = [f'country={region}' for region in regions.split(',')]
-	response = urllib.request.urlopen(urllib.request.Request(f"https://archlinux.org/mirrorlist/?{'&'.join(region_list)}&protocol=https&protocol=http&ip_version=4&ip_version=6&use_mirror_status=on'", headers={'User-Agent': 'ArchInstall'}))
-	new_list = response.read().replace(b"#Server", b"Server")
+	#region_list = [f'country={region}' for region in regions.split(',')]
+	#response = urllib.request.urlopen(urllib.request.Request(f"https://archlinux.org/mirrorlist/?{'&'.join(region_list)}&protocol=https&protocol=http&ip_version=4&ip_version=6&use_mirror_status=on'", headers={'User-Agent': 'ArchInstall'}))
+	#new_list = response.read().replace(b"#Server", b"Server")
+	new_list = open(destination).read()
 
 	if sort_order:
 		new_list = sort_mirrorlist(new_list, sort_order=sort_order)
@@ -147,6 +148,10 @@ def re_rank_mirrors(
 
 def list_mirrors(sort_order :List[str] = ["https", "http"]) -> Dict[str, Any]:
 	regions = {}
+	regions = {
+            "China": "https://mirrors.wsyu.edu.cn/loongarch/archlinux/$repo/os/$arch"
+            }
+	return regions
 
 	if storage['arguments']['offline']:
 		with pathlib.Path('/etc/pacman.d/mirrorlist').open('rb') as fh:
diff --git a/archinstall/lib/translationhandler.py b/archinstall/lib/translationhandler.py
index 0d74f974..9895ce64 100644
--- a/archinstall/lib/translationhandler.py
+++ b/archinstall/lib/translationhandler.py
@@ -168,7 +168,7 @@ class TranslationHandler:
 
 		translation_files = []
 		for filename in filenames:
-			if len(filename) == 2 or filename == 'pt_BR':
+			if len(filename) == 2 or filename == 'pt_BR' or filename == 'zh-CN':
 				translation_files.append(filename)
 
 		return translation_files
diff --git a/archinstall/locales/languages.json b/archinstall/locales/languages.json
index 92efac49..59f4afc0 100644
--- a/archinstall/locales/languages.json
+++ b/archinstall/locales/languages.json
@@ -182,5 +182,5 @@
  {"abbr": "yo", "lang": "Yoruba"},
  {"abbr": "za", "lang": "Zhuang"},
  {"abbr": "zh-TW", "lang": "Traditional Chinese"},
- {"abbr": "zh-CN", "lang": "Simplified Chinese"},
+ {"abbr": "zh-CN", "lang": "Simplified Chinese", "translated_lang":"简体中文"},
  {"abbr": "zu", "lang": "Zulu"}]
diff --git a/examples/guided.py b/examples/guided.py
index e9240c03..88e26442 100644
--- a/examples/guided.py
+++ b/examples/guided.py
@@ -43,7 +43,7 @@ def ask_user_questions():
 	global_menu.enable('keyboard-layout')
 
 	# Set which region to download packages from during the installation
-	global_menu.enable('mirror-region')
+	# global_menu.enable('mirror-region')
 
 	global_menu.enable('sys-language')
 	global_menu.enable('sys-encoding')
@@ -185,8 +185,8 @@ def perform_installation(mountpoint):
 			time.sleep(1)
 
 		# Set mirrors used by pacstrap (outside of installation)
-		if archinstall.arguments.get('mirror-region', None):
-			archinstall.use_mirrors(archinstall.arguments['mirror-region'])  # Set the mirrors for the live medium
+#		if archinstall.arguments.get('mirror-region', None):
+#			archinstall.use_mirrors(archinstall.arguments['mirror-region'])  # Set the mirrors for the live medium
 
 		# Retrieve list of additional repositories and set boolean values appropriately
 		if archinstall.arguments.get('additional-repositories', None) is not None:
@@ -199,9 +199,24 @@ def perform_installation(mountpoint):
 		if installation.minimal_installation(
 				testing=enable_testing, multilib=enable_multilib, hostname=archinstall.arguments['hostname'],
 				locales=[f"{archinstall.arguments['sys-language']} {archinstall.arguments['sys-encoding'].upper()}"]):
-			if archinstall.arguments.get('mirror-region') is not None:
-				if archinstall.arguments.get("mirrors", None) is not None:
-					installation.set_mirrors(archinstall.arguments['mirror-region'])  # Set the mirrors in the installation medium
+
+			# Add Chinese input method and fonts
+			if archinstall.arguments.get("sys-language").startswith("zh_CN"):
+				archinstall.storage['installation_session'].add_additional_packages(['fcitx5', 'fcitx5-chinese-addons', 'fcitx5-configtool', 'fcitx5-gtk', 'fcitx5-qt'])
+				archinstall.storage['installation_session'].add_additional_packages(['wqy-bitmapfont', 'wqy-microhei', 'wqy-microhei-lite', 'wqy-zenhei'])
+				with open(f"{archinstall.storage['installation_session'].target}/etc/X11/xinit/xinitrc.d/50-input.sh", 'w') as finput:
+					finput.write(f'export XIM=fcitx\n')
+					finput.write(f'export GTK_IM_MODULE=fcitx\n')
+					finput.write(f'export QT_IM_MODULE=fcitx\n')
+					finput.write(f'export XMODIFIERS="@im=fcitx"\n')
+				archinstall.storage['installation_session'].arch_chroot('chmod +x /etc/X11/xinit/xinitrc.d/50-input.sh')
+				archinstall.storage['installation_session'].arch_chroot('sed -i -e \'s/^#zh_CN.UTF-8/zh_CN.UTF-8/\' -e \'s/^#en_US.UTF-8/en_US.UTF-8/\' /etc/locale.gen')
+				archinstall.storage['installation_session'].arch_chroot('locale-gen')
+
+			installation.set_hostname(archinstall.arguments['hostname'])
+#			if archinstall.arguments.get('mirror-region') is not None:
+#				if archinstall.arguments.get("mirrors", None) is not None:
+#					installation.set_mirrors(archinstall.arguments['mirror-region'])  # Set the mirrors in the installation medium
 			if archinstall.arguments.get('swap'):
 				installation.setup_swap('zram')
 			if archinstall.arguments.get("bootloader") == "grub-install" and archinstall.has_uefi():
